multiple:
  - tool_id: "eslint:arrow-parens"
    extensions: ["js"]
    tags: ["JavaScript ES6"]
    default_weight: 411
    command: 'eslint --fix "#{filename}" --no-eslintrc --env "es6" --env "node" --parser-options "{ecmaVersion: 2018}" --rule "{arrow-parens:[2,\"as-needed\",{\"requireForBlockBody\":true}]}"'

  - tool_id: "typescript-eslint:arrow-parens"
    extensions: ["js", "ts"]
    tags: ["JavaScript ES6", "TypeScript"]
    default_weight: 412
    command: 'eslint --fix "#{filename}"  --parser "@typescript-eslint/parser" --plugin "@typescript-eslint" --rule "{@typescript-eslint/arrow-parens:[2,\"as-needed\",{\"requireForBlockBody\":true}]}"'

  - tool_id: "tslint:arrow-parens"
    extensions: ["js", "ts"]
    tags: ["JavaScript ES6", "TypeScript"]
    default_weight: 413

    command: 'echo "{\"jsRules\":{\"arrow-parens\":[true,\"ban-single-arg-parens\"]},\"rules\":{\"arrow-parens\":[true,\"ban-single-arg-parens\"]}}" > /c3pr/temp/tslint.json && tslint --fix -c /c3pr/temp/tslint.json "#{filename}"'

pr_title: Add parentheses around arrow function arguments
pr_body: |
   If your function takes a single argument and doesn’t use braces, omit the parentheses.
   Otherwise, always include parentheses around arguments for clarity and consistency.

    > Why? Less visual clutter.

    ```javascript
    // bad
    [1, 2, 3].map((x) => x * x);

    // good
    [1, 2, 3].map(x => x * x);

    // good
    [1, 2, 3].map(number => (
      `A long string with the ${number}. It’s so long that we don’t want it to take up space on the .map line!`
    ));

    // bad
    [1, 2, 3].map(x => {
      const y = x + 1;
      return x * y;
    });

    // good
    [1, 2, 3].map((x) => {
      const y = x + 1;
      return x * y;
    });
    ```

  More info: [Airbnb JS Style Guide](https://github.com/airbnb/javascript#arrows--one-arg-parens)
  [ESLint](https://eslint.org/docs/rules/arrow-parens) [TSLint](https://palantir.github.io/tslint/rules/arrow-parens/)